generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Area {
  id      Int      @id @default(autoincrement())
  label   String
  created DateTime @default(now())
  updated DateTime @updatedAt

  Location Location[]
}

model Location {
  id      Int      @id @default(autoincrement())
  label   String
  areaId  Int
  created DateTime @default(now())
  updated DateTime @updatedAt

  area   Area     @relation(fields: [areaId], references: [id])
  Guess  Guess[]
  Target Target[]
}

model Game {
  id           Int      @id @default(autoincrement())
  winnerUserId Int?
  created      DateTime @default(now())
  updated      DateTime @updatedAt

  winner   User?      @relation(fields: [winnerUserId], references: [id])
  GameUser GameUser[]
  Score    Score[]
}

model GameUser {
  gameId  Int
  userId  Int
  created DateTime @default(now())
  updated DateTime @updatedAt

  game Game @relation(fields: [gameId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([gameId, userId])
}

model Round {
  id          Int      @id @default(autoincrement())
  gameId      Int
  roundNumber Int
  userId      Int
  imageId     Int
  targetId    Int
  guessId     Int?
  score       Int
  created     DateTime @default(now())
  updated     DateTime @updatedAt

  image  Image  @relation(fields: [imageId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
  target Target @relation(fields: [targetId], references: [id])
  guess  Guess? @relation(fields: [guessId], references: [id])
}

model Score {
  id            Int      @id @default(autoincrement())
  gameId        Int
  userId        Int
  points        Int
  leaderboardId Int
  created       DateTime @default(now())
  updated       DateTime @updatedAt

  game        Game        @relation(fields: [gameId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
  leaderboard Leaderboard @relation(fields: [leaderboardId], references: [id])
}

model Leaderboard {
  id         Int     @id @default(autoincrement())
  label      String
  areaId     Int?
  locationId Int?
  Score      Score[]
}

model Guess {
  id         Int      @id @default(autoincrement())
  x          Int
  y          Int
  bearing    Int // Degrees
  locationId Int
  userId     Int
  created    DateTime @default(now())
  updated    DateTime @updatedAt

  location Location @relation(fields: [locationId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
  Round    Round[]
}

model Target {
  id         Int      @id @default(autoincrement())
  x          Int
  y          Int
  bearing    Int // Degrees
  locationId Int
  created    DateTime @default(now())
  updated    DateTime @updatedAt

  location Location @relation(fields: [locationId], references: [id])
  Round    Round[]
}

model Image {
  id      Int      @id @default(autoincrement())
  label   String
  size    String
  url     String
  created DateTime @default(now())
  updated DateTime @updatedAt

  Round Round[]
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  created   DateTime @default(now())
  updated   DateTime @updatedAt

  Game     Game[]
  Guess    Guess[]
  GameUser GameUser[]
  Round    Round[]
  Score    Score[]
}
